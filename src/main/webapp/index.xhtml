<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:p="http://primefaces.org/ui"
      xmlns:r="http://www.rubus.be/primefaces"
      xmlns:ds="http://deltaspike.apache.org/jsf"
      xmlns:mycustom="http://java.sun.com/jsf/composite/mycustom">
    
        <f:view transient="false" encoding="UTF-8" locale="en" contentType="text/html; charset=UTF-8">
            
        <h:head>
            <title>DeltaSpike</title>                        
            <script type='text/javascript'>
                //<![CDATA[
                //]]>
            </script>
            <ds:windowId/>         
        </h:head>
        
        <h:body onload="">    
            <!-- Show the windowId-->
            <h:outputText value="WindowId: " /><h:outputText value="#{cr100.windowId}" />                
            <p:messages id="errorMessups"/>
                
                
            <h:form id="viewAcessScopedForm" styleClass="form" title="ViewAccessScopedForm" >
                <!-- Pure resource-->
                <h:panelGroup layout="block">
                    <h:outputText value="As static resource: resource['image/blackLabrador.jpg'] " />           
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageA"  value="#{resource['img/blackLabrador.jpg']}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>
                   
                <!-- ViewScoped area-->
                <h:panelGroup layout="block">
                    <h:outputText value="As resource determined from viewSopecedBean: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageB"  value="#{resource[viewScopeadBean.imageResource]}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>
                   
                <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined fromViewScopedBean: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageC"  value="#{viewScopeadBean.streamedContent}"  width="250px" height="250px" rendered="true" />
                    
                    <br/>
                    <p> Ok and here we have our bug. 
                        The problem we have here seems to be that PrimeResourceHandler and the GraphicImageRenderer work together without problems with deltaspike when dealing with static content. 
                        However, when we are dealing with dynaminc content set on page bean
                        the Renderer will tune the session context with the expression language of the .xhtml page so when the browser asks for the img src,                         
                        PrimeResourceHandler will be able to discover what EL was associated to that img resource
                        and resolve on the fly the dynamic content asked by the user.
                        However, the view access scoped seems not be available for PrimeFaces so he comes out empty handed.
                    </p>
                </h:panelGroup>
                <br/>
                <br/>
                
                 <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined fromViewScopedBean: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageC2"  value="#{viewScopeadBean.streamedContent}"  width="250px" height="250px" rendered="true" >
                        <r:advancedRenderering value="true"/>
                    </p:graphicImage>
                    
                    
                    <br/>
                    <p> This one should be using the advanced graphicImage feature.
                        As it uses advancedRenderering value="true"
                    </p>
                </h:panelGroup>
                <br/>
                <br/>
            </h:form>
            
            <h:form id="requestScopedForm" styleClass="form" title="RequestScopedForm">
                <!-- RequestScoped area-->
                <h:outputText value="Pinging The RequestScopedBean:" ></h:outputText>
                <h:outputText value="#{requestScopedBean.ping}" ></h:outputText>
                    
                <h:panelGroup layout="block">
                    <h:outputText value="As resource determined from requestScopeadBean " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageD"  value="#{resource[requestScopedBean.imageResource]}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>
                   
                <!-- From View Scoped Bean Resource resource Dynamic Content-->
                <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined requestScopeadBean: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageE"  value="#{requestScopedBean.streamedContent}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>                                                                                
                  
                <!-- From View Scoped Bean Resource resource Dynamic Content-->
                  <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined requestScopeadBean using advanced rendering: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageE2"  value="#{requestScopedBean.streamedContent}"  width="250px" height="250px" rendered="true" >
                        <r:advancedRenderering value="true"/>
                    </p:graphicImage>
                    
                    
                    <br/>
                    <p> This one should be using the advanced graphicImage feature.
                        As it uses advancedRenderering value="true".
                        In this scenario we will likely not see a problematic issue of the default implementaiton
                        of the advanced graphic image rendering closing the StreamedContent on the bean, since
                        streamed content is provided from a request scoped bean and on each request a new stream content gets created.
                        But the fact that the advanced grpahic image renderer is deciding to close the input stream is most likely an issue.
                    </p>
                </h:panelGroup>
                <br/>
                <br/> 
            </h:form>
            
            
            
            
             <h:form id="sessionScopedForm" styleClass="form" title="sessionScopedForm">
                <!-- RequestScoped area-->
                <h:outputText value="Pinging The sessionScopedBean" ></h:outputText>
                <h:outputText value="#{sessionScopedBean.ping}" ></h:outputText>
                    
                <h:panelGroup layout="block">
                    <h:outputText value="As resource determined from requestScopeadBean " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageF"  value="#{resource[sessionScopedBean.imageResource]}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>
                   
                <!-- From View Scoped Bean Resource resource Dynamic Content-->
                <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined sessionScopedBean: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageG"  value="#{sessionScopedBean.streamedContent}"  width="250px" height="250px" rendered="true" />
                </h:panelGroup>
                <br/>
                <br/>                                                                                
                  
                <!-- From View Scoped Bean Resource resource Dynamic Content-->
                  <h:panelGroup layout="block">
                    <h:outputText value="As dynamicRsource determined sessionScopedBean using advanced rendering: " />                                        
                    <br/>
                    <br/>
                    <p:graphicImage id="previewImageG2"  value="#{sessionScopedBean.streamedContent}"  width="250px" height="250px" rendered="true" >
                        <r:advancedRenderering value="true"/>
                    </p:graphicImage>
                    
                    
                    <br/>
                    <p> Here we could potentially have problems upon refresh, since the advanced graphic image renderer
                        will close the StreamContent input stream. Therefore the element previewImageG will have problems
                        upon trying to render the image a second time as the stream will be closed.
                    </p>
                </h:panelGroup>
                <br/>
                <br/> 
            </h:form>
            
        </h:body> 
    </f:view>
</html>